#ifndef VGA_H
#define VGA_H

void setcolor(int color, int red, int green, int blue);
inline void ClearVideo(char *screen, char color);
inline void DrawPixel(unsigned int x, unsigned int y, char color);
void DrawLine(int x0, int y0, int x1, int y1, char color);
void DrawRectangle(int x0, int y0, int x1, int y1,  char color);
void DrawFilledRectangle(int x0, int y0, int x1, int y1, char color);
void DrawCircle(int x0, int y0, int radius,  char color);
void DrawCharacterAt(unsigned int ch, unsigned int x, unsigned int y,  char fcolor, char bcolor);
void PutsAt(const char *s, unsigned int x, unsigned int y, char fcolor, char bcolor);

int abs(int x);

int graphicstest();
static void demo_graphics(void);
void set_text_mode(int hi_res);

#define CHAR_HEIGHT 8

static const unsigned char customfont[][8] = {
{ 0,0,0,0,0,0,0,0},	// space
{24,24,24,24,0,0,24,0},	// !
{102,102,102,0,0,0,0,0},	// "
{102,102,255,102,255,102,102,0}, // #
{24,62,64,60,2,124,24,0}, // $
{98,98,12,24,48,102,70,0},	// %
{120,204,120,112,206,204,126,0},	// &
{24,24,24,0,0,0,0,0},	// '
{24,48,96,96,96,48,24,0},	// (
{24,12,6,6,6,12,24,0},	// )
{0,102,60,255,60,60,102,0},	// *
{0,24,24,126,24,24,0,0},	// +
{0,0,0,0,24,24,48,0},	// ,
{0,0,0,126,0,0,0,0},	// -
{0,0,0,0,24,24,0,0},	// .
{2,6,12,24,48,96,64,0},	// /
{60,102,110,118,102,102,60,0},	// 0
{24,24,56,24,24,24,126,0},	// 1
{60,102,6,12,48,96,126,0},	// 2
{60,102,6,28,6,102,60,0},	// 3
{12,28,60,204,254,12,12,0},	// 4
{126,96,124,6,6,102,60,0},	// 5
{60,102,96,124,102,102,60,0},	// 6
{126,102,12,24,24,24,24,0},	// 7
{60,102,102,60,102,102,60,0}, // 8
{60,102,102,62,6,102,60,0},	// 9
{0,24,0,0,24,0,0,0},	// :
{0,24,0,0,24,24,48,0},	// ;
{14,24,48,96,48,24,14,0},	// <
{0,0,0,124,0,124,0,0},	// =
{112,24,12,6,12,24,112,0},	// >
{60,102,6,24,24,0,24,0},	// ?
{60,102,110,110,96,98,60,0},	// @
{24,60,102,126,102,102,102,0},	// A
{124,102,102,124,102,102,124,0},	// B
{60,102,96,96,96,102,60,0},	// C
{120,108,102,102,102,108,120,0},	// D
{126,96,96,124,96,96,126,0},	// E
{126,96,96,124,96,96,96,0},	// F
{60,102,96,110,102,102,60,0},	// G
{102,102,102,126,102,102,102,0},	// H
{60,24,24,24,24,24,60,0},	// I
{30,12,12,12,12,108,56,0},	// J
{102,108,120,116,120,108,102,0},	// K
{96,96,96,96,96,96,124,0},	// L
{198,238,254,214,198,198,198,0},	// M
{102,118,126,126,110,102,102,0},	// N
{60,102,102,102,102,102,60,0},	// O
{124,102,102,124,96,96,96,0},	// P
{60,102,102,102,102,60,14,0},	// Q
{124,102,102,124,120,108,102,0},	// R
{60,102,96,60,6,102,60,0},	// S
{126,24,24,24,24,24,24,0},	// T
{102,102,102,102,102,102,60,0},	// U
{102,102,102,102,102,60,24,0},	// V
{198,198,198,214,254,238,198,0},	// W
{102,102,60,24,60,102,102,0},	// X
{102,102,102,60,24,24,24,0},	// Y
{126,6,12,24,48,32,126,0},	// Z
{120,96,96,96,96,96,120,0},  // [
{64,96,48,24,12,6,2,0}, // Backslash
{60,12,12,12,12,12,60,0},// ]
{24,60,102,0,0,0,0,0},	// up arrow	^ in ASCII
{0,0,0,0,0,0,255,0},	// #		_ in ASCII
{96,96,48,0,0,0,0,0},	// dash		` in ASCII
{0,0,60,6,62,102,62,0},	// a
{0,96,96,124,102,102,124,0},	// b
{0,0,60,96,96,96,60,0},	// c
{0,12,12,60,108,108,60,0},	// d
{0,0,60,102,126,96,60,0},	// e
{0,28,48,124,48,48,48,0},	// f
{0,0,62,102,102,62,6,120},	// g
{0,96,96,120,108,108,108,0},	// h
{0,24,0,56,24,24,28,0},	// i
{0,12,0,12,12,12,12,56},	// j
{0,96,96,108,120,120,108,0},	// k
{0,56,24,24,24,24,60,0},	// l
{0,0,102,127,127,107,99,0},	// m
{0,0,124,126,102,102,102,0},	// n
{0,0,60,102,102,102,60,0},	// o
{0,0,124,102,102,124,96,96},	// p
{0,0,62,102,102,62,6,6},	// q
{0,0,124,102,96,96,96,0},	// r
{0,0,62,96,60,6,124,0},	// s
{0,24,126,24,24,24,14,0},	// t
{0,0,102,102,102,102,62,0},	// u
{0,0,102,102,102,60,24,0},	// v
{0,0,99,107,127,62,20,0},	// w
{0,0,102,60,24,60,102,0},	// x
{0,0,102,102,102,62,12,120},	// y
{0,0,126,12,24,48,126,0},	// z
{0,56,48,112,192,112,48,56},	// 1/4		{ in ASCII
{24,24,24,24,24,24,24,24},	// ||		| in ASCII
{0,56,24,28,6,28,24,56},	// 3/4		} in ASCII
{0,0,50,126,76,0,0,0},	// divide sign	~ in ASCII
	{255,255,255,255,255,255,255,255}	// character-sized block
	//		not defined in ASCII
};

#endif
